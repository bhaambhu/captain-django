# Generated by Django 4.1.4 on 2022-12-21 09:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import slugger.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('display_name', models.CharField(blank=True, max_length=250, null=True)),
                ('about', models.CharField(blank=True, max_length=500)),
                ('explanation', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(blank=True, null=True)),
                ('sub_paper', models.CharField(blank=True, max_length=50, null=True)),
                ('temp_title', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ExamDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('shortform', models.CharField(blank=True, max_length=50)),
                ('job_title', models.CharField(blank=True, max_length=200)),
                ('about', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', slugger.fields.AutoSlugField(populate_from='title')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('about', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('published', 'Published'), ('draft', 'Draft')], default='draft', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_data', models.TextField(blank=True)),
                ('explanation', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('display_name', models.CharField(blank=True, max_length=250, null=True)),
                ('about', models.CharField(blank=True, max_length=500)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='knowledge.subject')),
            ],
            options={
                'unique_together': {('name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', slugger.fields.AutoSlugField(populate_from='title')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('about', models.CharField(blank=True, max_length=500)),
                ('steps', models.JSONField(blank=True, default=list)),
                ('assessor', models.JSONField(blank=True, default=dict)),
                ('requires', models.ManyToManyField(blank=True, related_name='required_for', to='knowledge.topic')),
                ('subject', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topics', to='knowledge.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('explanation', models.TextField(blank=True)),
                ('difficulty', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to=settings.AUTH_USER_MODEL)),
                ('concepts', models.ManyToManyField(blank=True, related_name='questions', to='knowledge.concept')),
                ('exams', models.ManyToManyField(blank=True, to='knowledge.exam')),
                ('question_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge.questiongroup')),
                ('topics', models.ManyToManyField(blank=True, to='knowledge.topic')),
            ],
        ),
        migrations.CreateModel(
            name='PathTopicSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_sequence', to='knowledge.path')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_paths', to='knowledge.topic')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('path', 'order')},
            },
        ),
        migrations.AddField(
            model_name='path',
            name='topics',
            field=models.ManyToManyField(related_name='paths', through='knowledge.PathTopicSequence', to='knowledge.topic'),
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.TextField()),
                ('correct', models.BooleanField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge.question')),
            ],
        ),
        migrations.AddField(
            model_name='exam',
            name='description',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='papers', to='knowledge.examdescription'),
        ),
        migrations.CreateModel(
            name='TopicProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verifiable', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics_progress', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='knowledge.topic')),
            ],
            options={
                'unique_together': {('student', 'topic')},
            },
        ),
    ]
